/* Used to display layouting primitives. This adds some padding so that the
   borders of other (displayed) layout primitives and placeholders don't touch
   each others.
 */
.wrapper {
  padding: calc(var(--grid-gutter) / 3);
  outline: 2px dashed purple;
}
.wrapper + .wrapper {
  margin-top: calc(var(--grid-gutter) / 3);
}

.bordered {
  border: 2px solid black;
}
.bordered-3 {
  border: 2px solid black;
  border-bottom: none;
}

.u-grid {
  display: grid;
  gap: var(--grid-gutter);
  grid-template-columns: repeat(12, 1fr);
}

/* */
h1, h2, h3, h4 {font-weight: 600;}
h1 {letter-spacing: -0.15rem;}
h2 {letter-spacing: -0.1rem;}
h3 {letter-spacing: -0.05rem;}
h1 {font-size: var(--step-c-4);}
h2 {font-size: var(--step-c-3);}
h3 {font-size: var(--step-c-2);}
h4 {font-size: var(--step-c-1);}
p {font-size: var(--step-c-0); line-height: 1.5em;}
p small {font-size: var(--step-c--1); line-height: 1.5em;}
em {font-style: italic;}
.limit-p p {max-width: 42em;}
.limit-40ch {max-width: 40ch;}
.limit-42em {max-width: 42em;}
.mute {color: #666;}
.c-text a {color: blue; text-decoration: none;}
.c-content a {color: blue; text-decoration: none;}
pre {font-size: 0.875rem; padding: 0.5rem 0.75rem; background-color: #f2f2f2;}
code {background-color: #f2f2f2; font-family: 'DejaVu Sans Mono'; font-size: 95%;}
hr {
  font-size: var(--step-c-4); /* like h1, for flow spacing */
  color: black;
  background-color: black;
  width: 8rem;
  border: none;
  height: 0.125rem;
  margin: 2.125rem 0;
}
.hr-full {
  width: 100%;
}
.c-text h1 {font-size: var(--step-a-4);}
.c-text h2 {font-size: var(--step-a-3);}
.c-text h3 {font-size: var(--step-a-2);}
.c-text h4 {font-size: var(--step-a-1);}
.c-text p {font-size: var(--step-a-0); line-height: 1.5em;}
.c-text p small {font-size: var(--step-a--1); line-height: 1.5em;}
.c-text h1 {letter-spacing: 0rem;}
.c-text h2 {letter-spacing: 0rem;}
.c-text h3 {letter-spacing: 0rem;}
.c-text label {font-weight: 600;}
.c-text ul {list-style: disc; padding-left: 3rem;}
.c-text ul li {line-height: 1.5em;}
.c-content h1 {font-size: var(--step-b-4);}
.c-content h2 {font-size: var(--step-b-3);}
.c-content h3 {font-size: var(--step-b-2);}
.c-content h4 {font-size: var(--step-b-1);}
.c-content p {font-size: var(--step-b-0); line-height: 1.5em;}
.c-content p small {font-size: var(--step-b--1); line-height: 1.5em;}
.c-content ul {
  list-style: disc;
  padding-left: 3rem;
  &.no-disc {list-style: none; padding-left: 0;}
  &.horizontal > li {display: inline-block;}
  &.horizontal > *:not(:last-child) {margin-right: 1em;}

}
.c-content ul li {line-height: 1.5em;}
.type-scale-d h1 {font-size: var(--step-d-4);}
.type-scale-d h2 {font-size: var(--step-d-3);}
.type-scale-d h3 {font-size: var(--step-d-2);}
.type-scale-d h4 {font-size: var(--step-d-1);}
.type-scale-d p {font-size: var(--step-d-0); line-height: 1.5em;}
.type-scale-d p small {font-size: var(--step-d--1); line-height: 1.5em;}
.u-step-a-5, .u-step-a-4, .u-step-a-3, .u-step-a-2, .u-step-a-1 {font-weight: 600;}
.u-step-a-5 {font-size: var(--step-a-5);}
.u-step-a-4 {font-size: var(--step-a-4);}
.u-step-a-3 {font-size: var(--step-a-3);}
.u-step-a-2 {font-size: var(--step-a-2);}
.u-step-a-1 {font-size: var(--step-a-1);}
.u-step-a-0 {font-size: var(--step-a-0);}
.u-step-a--1 {font-size: var(--step-a--1);}
.u-step-a--2 {font-size: var(--step-a--2);}
.u-step-b-5, .u-step-b-4, .u-step-b-3, .u-step-b-2, .u-step-b-1 {font-weight: 600;}
.u-step-b-5 {font-size: var(--step-b-5);}
.u-step-b-4 {font-size: var(--step-b-4);}
.u-step-b-3 {font-size: var(--step-b-3);}
.u-step-b-2 {font-size: var(--step-b-2);}
.u-step-b-1 {font-size: var(--step-b-1);}
.u-step-b-0 {font-size: var(--step-b-0);}
.u-step-b--1 {font-size: var(--step-b--1);}
.u-step-b--2 {font-size: var(--step-b--2);}
.u-step-c-5, .u-step-c-4, .u-step-c-3, .u-step-c-2, .u-step-c-1 {font-weight: 600;}
.u-step-c-5 {font-size: var(--step-c-5);}
.u-step-c-4 {font-size: var(--step-c-4);}
.u-step-c-3 {font-size: var(--step-c-3);}
.u-step-c-2 {font-size: var(--step-c-2);}
.u-step-c-1 {font-size: var(--step-c-1);}
.u-step-c-0 {font-size: var(--step-c-0);}
.u-step-c--1 {font-size: var(--step-c--1);}
.u-step-c--2 {font-size: var(--step-c--2);}
.u-step-d-5 {font-size: var(--step-d-5);}
.u-step-d-4 {font-size: var(--step-d-4);}
.u-step-d-3 {font-size: var(--step-d-3);}
.u-step-d-2 {font-size: var(--step-d-2);}
.u-step-d-1 {font-size: var(--step-d-1);}
.u-step-d-0 {font-size: var(--step-d-0);}
.label-step {font-size: 0.875rem; color: grey;}
.debug-gap-color {background: #eed9eb;}
.debug-column-color > span {font-size: 0.875rem; font-family: monospace; background: white;}
.full-height {
  height: 100vh;
}
.flow {
  --flow-space: 1.4em;
}
.flow > * + * {
  margin-top: var(--flow-space);
}
.flow input {
  margin-top: calc(var(--flow-space) / 4);
}
.flow-all > * {
  --flow-space: 1.4em;
  margin-top: var(--flow-space);
}
.flow-all > *:last-child {
  --flow-space: 1.4em;
  margin-bottom: var(--flow-space);
}
.flow-all input {
  margin-top: calc(var(--flow-space) / 4);
}

em, i {
  font-style: italic;
}

strong, b {
  font-weight: 600;
}

// This is enough to have the image take the same space as a paragraph, in e.g
// .c-container or .max-40rem. Is there a customary name for this ?
img.adapt {
  width: 100%;
}

// Similar to the margin added by `flow` for a h1 heading at scale C.
// `flow` sets the margin to be 1.4em, while here we're not using ems,
// but it seems to work.
.u-flow-c-4 {
  margin-top: calc(var(--step-c-4) * 1.4);
}
.u-flow-c-0 {
  margin-top: calc(var(--step-c-0) * 1.4);
}
.u-space-after-c-4 {
  margin-bottom: calc(var(--step-c-4) * 1.4);
}

.paragraph-70ch p {
  max-width: 70ch;
}
.limit-70ch {
  max-width: 70ch;
}


.with-sidebar {
  display: flex;
  flex-wrap: wrap;
  gap: var(--space-m);
}

.with-sidebar .sidebar {
  flex-grow: 1;
}

.with-sidebar .main {
  flex-basis: 0;
  flex-grow: 999;
  min-inline-size: 50%;
}

/* Top-level wrapper to push the footer at the bottom of the viewport.
   This is useful when there is not enough content to push the footer
   down the page.
   This should be used on the main div, or directly on the body (and
   should directly enclose the footer).

   This could be extended to vertically center some main content:
   https://github.com/aprietof/every-layout/blob/master/layouts.css#L156-L185
*/
.cover {
  display: flex;
  flex-direction: column;
  min-height: 100vh;
}
.cover > main {
  margin-block: auto;
}
.cover > footer {
  margin-top: auto;
}

.center {
  margin-left: auto;
  margin-right: auto;
}
// Tachyons would call this mw8 or something.
// Naming-wise, I would prefer something like t-shirt sizes (small, large, ...)
// instead of some specific value (like o-containers).
.max-50rem {
  max-width: 50rem;
}
.max-40rem {
  max-width: 40rem;
}
.max-30rem {
  max-width: 30rem;
}

// A4 aspect ration is 1.414:1
// If we use .max-50rem as width, here is the height:
.a4-50rem--height {
  height: calc(50rem * 1.414);
}


/* -----------------------------------------------------------------------------
   Menu items (dropdowns and links)
   -------------------------------------------------------------------------- */

/* The menu-item container div. This can contain a dropdown button,
   or a simple link.*/
.menu-item {
  display: inline-block;
  position: relative;
}

/* Style similarly either a dropdown button or a simple link.
   The dropdown case accomodate more left padding for a small down
   arrow. */
.menu-dropdown {
  display: inline-block;
  padding: 12px var(--space-xs) 12px calc(var(--space-xs) + 12px);
  color: black;
  cursor: pointer;
}
.menu-link {
  display: inline-block;
  padding: 12px var(--space-xs);
  color: black;
  cursor: pointer;
}

/* Add a small down arrow to the dropdown button. */
.menu-dropdown:before {
  pointer-events: none;
  content: ' ';
  position: absolute;
  left: 0.7rem;
  top: 1.1875rem;
  width: 0;
  height: 0;
  border-width: 0.625rem;
  border: 0.3125rem solid black;
  border-bottom-color: transparent;
  border-left-color: transparent;
  border-right-color: transparent;
}

/* Style the dropdown content. */
.menu-item .menu-dropdown-content {
  position: absolute;
  top: 0.4rem;
  background-color: white;
  min-width: 20ch;
  border: 2px solid #dddddd;
  z-index: 100000;
  visibility: hidden;
  opacity: 0;
  // Delay when disappearing is necessary otherwise the click on a link
  // isn't registered on Chrome.
  // It's ugly when clicking outside and waiting for it to close though.
  transition: 0s 0.2s ease-out;
}
.menu-item a {
  color: black;
  text-decoration: none;
}
.menu-dropdown-content a {
  padding: 12px 16px;
  display: block;
}
.menu-dropdown-content a:hover {
  background-color: #f2f2f2;
}

/* Show the dropdown content when focused. */
.menu-item:focus .menu-dropdown-content {
  transform: translateY(40px);
  visibility: visible;
  opacity: 1;
  // Disable the above delay (make it instant) when appearing.
  transition: 0s 0s ease-out;
}
.menu-link:hover, .menu-dropdown:hover, .menu-item:focus .menu-dropdown {
  background-color: #f9f9f9;
}

/* Mask to close the dropdown by stealing the focus when clicked. */
.menu-item .menu-mask {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  opacity: 0;
  cursor: pointer;
  z-index: 10;
  display: none;
}
.menu-item:focus .menu-mask {
  display: inline-block;
  margin-top: -16px;
  height: 50px;
  background-color: red;
  opacity: var(--menu-mask-opacity, 0);
}
// Original code has this. Keep it around for a while if we need to
// debug again.
//.menu-item .menu-mask:focus .menu-dropdown-content {
//  outline: none;
//  visibility: hidden;
//  opacity: 0;
//}

/* Show the menu mask (to make sure it has the same size as the dropdown
   button. (Add this to .menu-mask.) */
.menu-mask--debug {
  --menu-mask-opacity: 0.8;
}


/* -----------------------------------------------------------------------------
   Buttons
   -------------------------------------------------------------------------- */

.c-button {
  appearance: none;
  cursor: pointer;
  border: 2px solid black;
  padding: 0.625rem 1.25rem;
  font-size: 1rem;
  text-align: center;
  align-items: center;
  justify-content: center;
  vertical-align: middle;
  display: inline-flex;
}

a.c-button--primary {
  color: white;
  text-decoration: none;
}

a.c-button--secondary {
  color: black;
  text-decoration: none;
}

.c-button--tall {
  padding: 0.625rem 1.25rem 1.875rem;
  justify-content: left;
  vertical-align: top;
}

// Button label
.c-button span {
  white-space: nowrap;
}

// Button icon
.c-button svg {
  width: 1.125rem;
  height: 1.125rem;
}

// Space between label and icon
.c-button span + svg {
  margin-left: 0.4rem;
}

// Primary button variant
.c-button--primary {
  background: #000;
  color: #fff;

  svg * {
    fill: currentColor;
  }

  &:hover {
    background: #999;
    border-color: #999;
  }

  &:active {
    background: #777;
    border-color: #777;
  }
}

.c-button--primary-push {
  &:active {
    transform: translateY(2px);
    background: #999;
    border-color: #999;
  }
}

// Secondary button variant
.c-button--secondary {
  background: #fff;
  color: #000;

  svg * {
    fill: currentColor;
  }

  &:hover {
    background: #ddd;
    border-color: #000;
  }

  &:active {
    background: #999;
    border-color: #000;
  }
}

.c-button--secondary-push {
  &:active {
    transform: translateY(2px);
    background: #ddd;
    border-color: #000;
  }
}

// Input field
.c-input {
  appearance: none;
  height: 2.25rem;
  width: calc(100% - 2px);
  padding: 0.5rem;
  background: #f4f4f4;
  border: 1px solid #f4f4f4;
  border-bottom: 1px solid #ddd;
  font-size: inherit;
  &:focus {
    outline: 0;
    border-color: blue;
    box-shadow: inset 0 0 0 0.0625rem blue;
  }
}

// Style iframes in the notes.
.wrrrap {
  width: 964px;
  margin: 1.4em auto 0 0;
}
.wrrrap iframe {
  border: 2px solid #DDD;
}

// Textual "logo" (instead of a SVG).
// See https://hypered.design/specimens/logo.html.
.logo {font-weight: 700; font-size: 2rem; letter-spacing: -0.05rem;}
.logo a {color: black;}


// Used for simple / bread / crumbs.
.breadcrumb { color: #555; }

// Specific rules for the Motherboard listings.
.mb-entry {
  display: flex;
  gap: 1em;
  justify-content: flex-start;
  padding-right: 0.5em;
}
.mb-entry:hover {background-color: #F5F5F5;}
.mb-entry {margin-top: 1em;}
.mb-num {width: 3em; text-align: right; flex-grow: 0; flex-shrink: 0;}
.mb-grow {flex-grow: 1;}
.mb-second-line {color: #555; margin-top: 0.5em;}
.mb-second-line--dense {color: #555; margin-top: 0em; display: flex; justify-content: space-between;}
.mb-second-line span {margin-left: 4em;}
.mb-second-line p + p {margin-top: -0.3em;}

// Specific rules for the Motherboard documents.
h1.mb-title {text-indent: 1.8em; text-align: justify;}
.legislation p {text-indent: 1em;}
.legislation p.first {text-indent: 3em;}
.legislation p.second {text-indent: 3em; margin-top: 0;}
.article {color: #666;}
.article:after {
  content: '\00a0\00a0';
}
i.mb-i {font-style: italic;}
// We reuse the menu dropdown mechanism, but this is not right:
// we want only one active menu dropdown at a time, but here we want
// to allow multiple folded texts to be unfolded at the same time.
.menu-item .menu-dropdown-content-mb {
  display: none;
}
.menu-item:focus .menu-dropdown-content-mb {
  display: block;
  padding-left: 2em;
  border-left: 4px solid #DFDFDF;
}
.mb-pairs {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(10ch, 1fr));
  grid-gap: 1em;
}
.mb-pairs dt {
  grid-column-start: 1;
  /* I should separate layouting and styling. */
  font-weight: 500;
}
.mb-pairs dd {
  grid-column-start: span 1;
}

// Specific rules for blog posts.
.blog-post-details {border: 2px solid #e4e4e4; padding: 1em;}
.blog-post-centered-svg svg {display: block; margin: auto;}

// Key-values, when using tables.
table.pairs {
  table-layout: fixed;
  width: 100%;
}
table.pairs tr td:first-child {
  font-weight: 500;
  width: calc(33.3333%);
  padding: 0.5em 0.5em 0.5em 0;
}
table.pairs tr td:last-child {
  width: calc(66.6667%);
}
table.pairs tr {
  /* Take some space, even without .pairs--border-bottom. */
  border-bottom: 1px solid #fff;
}
table.pairs.pairs--border-bottom tr {
  border-bottom: 1px solid #ddd;
}
table.pairs tr:hover {
  background-color: #efefef;
}

// Basic tables.
table.table {
  width: 60%;
}
.table td {
  padding: 0.2rem;
}
// A la Tachyons.
.tr {
  text-align: right;
}

/* Leader lines. Code from
 * https://markentier.tech/posts/2021/03/responsive-toc-leader-lines-with-css/
 */

.leader-line {
  display: grid;
  grid-template-columns: auto max-content;
  grid-template-areas: "a b";
  align-items: end;
  gap: 0 .25rem;
}

.leader-line-a {
  margin: 0;
  padding: 0;
  grid-area: a;
  position: relative;
  overflow: hidden;
}

.leader-line-a::after {
  position: absolute;
  padding-left: .25ch;
  content: " . . . . . . . . . . . . . . . . . . . "
    ". . . . . . . . . . . . . . . . . . . . . . . "
    ". . . . . . . . . . . . . . . . . . . . . . . "
    ". . . . . . . . . . . . . . . . . . . . . . . "
    ". . . . . . . . . . . . . . . . . . . . . . . ";
  text-align: right;
}

.leader-line-b {
  grid-area: b;
}

// Specific spacing for leader lines.
.flow-leader-line > * + * {
  --flow-space: 0.6em;
  margin-top: var(--flow-space);
}
