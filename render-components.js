/*
 * This render React components from the command-line. The rendering code is
 * similar to
 * https://github.com/ole-treichel/storybook-react-to-static-markup/blob/master/src/withStaticMarkup.js#L11.
 *
 * In addition to a normal `npm install`, I also run
 *     npm install @babel/core @babel/register --save-dev
 *
 * The usage is similar to hypered-design:
 *     node render-components.js footer
 *
 * In addition to component names, it also accepts 'pretty' as
 * argument. The intention is to use to normalize the output of
 * hypered-design, then be able to compare both programs:
 *
 *     hypered-design footer | node render-components.js pretty
 */

// Use babel/register because the components are ES modules.
require('@babel/register');
var ReactDOMServer = require('react-dom/server');
var pretty = require('pretty');
var fs = require('fs');

// Prefix by C to avoid being shadowed by the stories below.
var CNav = require("./components/Navigation/Navigation").Nav;
var CFooter = require("./components/Footer/Footer").Footer;
var CBareLayout = require("./components/Layout/Layout").BareLayout;

// Generated by hypered-design js-import-stories.
var A = require("./components/A/A.stories");
var Banner = require("./components/Banner/Banner.stories");
var BlockQuote = require("./components/BlockQuote/BlockQuote.stories");
var Button = require("./components/Button/Button.stories");
var ButtonLink = require("./components/ButtonLink/ButtonLink.stories");
var Checkbox = require("./components/Checkbox/Checkbox.stories");
var Codeblock = require("./components/Codeblock/Codeblock.stories");
var colours = require("./components/Colours/Colours.stories");
var Dropdown = require("./components/Dropdown/Dropdown.stories");
var Footer = require("./components/Footer/Footer.stories");
var Form = require("./components/Form/Form.stories");
var HR = require("./components/HR/HR.stories");
var Image = require("./components/Image/Image.stories");
var Input = require("./components/Input/Input.stories");
var Layout = require("./components/Layout/Layout.stories");
var List = require("./components/List/List.stories");
var NavBlock = require("./components/NavBlock/NavBlock.stories");
var Navigation = require("./components/Navigation/Navigation.stories");
var Radio = require("./components/Radio/Radio.stories");
var Sidebar = require("./components/Sidebar/Sidebar.stories");
var SidePanel = require("./components/SidePanel/SidePanel.stories");
var Table = require("./components/Table/Table.stories");
var Title = require("./components/Title/Title.stories");
var Typography = require("./components/Typography/Typography.stories");
var Whitespace = require("./components/Whitespace/Whitespace.stories");

function render(c) {
  console.log(pretty(ReactDOMServer.renderToStaticMarkup(c)));
}

var args = process.argv.slice(2);

switch (args[0]) {

case 'nav':
  render(CNav([]));
  break;

case 'footer':
  render(CFooter());
  break;

case 'bare-layout':
  render(CBareLayout([]));
  break;

case 'pretty':
  var content = fs.readFileSync(0, 'utf-8');
  console.log(pretty(content));
  break;

// Generated by hypered-design js-stories.
case 'a--black':
  render(A.Black());
  break;

case 'a--blue':
  render(A.Blue());
  break;

case 'banner--green':
  render(Banner.Green());
  break;

case 'banner--red':
  render(Banner.Red());
  break;

case 'banner--yellow':
  render(Banner.Yellow());
  break;

case 'blockquote--default':
  render(BlockQuote.Default());
  break;

case 'blockquote--pull-quote':
  render(BlockQuote.PullQuoteExample());
  break;

case 'blockquote--with-optional-pull-quote':
  render(BlockQuote.WithOptionalPullQuote());
  break;

case 'button--full-width':
  render(Button.fullWidth());
  break;

case 'button--primary-disabled':
  render(Button.primaryDisabled());
  break;

case 'button--primary-large':
  render(Button.primaryLarge());
  break;

case 'button--primary':
  render(Button.primary());
  break;

case 'button--secondary-disabled':
  render(Button.secondaryDisabled());
  break;

case 'button--secondary-large':
  render(Button.secondaryLarge());
  break;

case 'button--secondary':
  render(Button.secondary());
  break;

case 'buttonlink--full-width':
  render(ButtonLink.fullWidth());
  break;

case 'buttonlink--primary':
  render(ButtonLink.primary());
  break;

case 'buttonlink--primary-disabled':
  render(ButtonLink.primaryDisabled());
  break;

case 'buttonlink--primary-large':
  render(ButtonLink.primaryLarge());
  break;

case 'buttonlink--secondary':
  render(ButtonLink.secondary());
  break;

case 'buttonlink--secondary-disabled':
  render(ButtonLink.secondaryDisabled());
  break;

case 'buttonlink--secondary-large':
  render(ButtonLink.secondaryLarge());
  break;

case 'checkbox--pill':
  render(Checkbox.Pill());
  break;

case 'checkbox--default':
  render(Checkbox.Default());
  break;

case 'codeblock--default':
  render(Codeblock.Default());
  break;

case 'codeblock--editable':
  render(Codeblock.Editable());
  break;

case 'codeblock--with-table':
  render(Codeblock.WithTable());
  break;

case 'codeblock--with-toolbar':
  render(Codeblock.WithToolbar());
  break;

case 'colours--background':
  render(colours.Background());
  break;

case 'colours--samples':
  render(colours.Samples());
  break;

case 'colours--text':
  render(colours.Text());
  break;

case 'dropdown--default':
  render(Dropdown.Default());
  break;

case 'footer--default':
  render(Footer.Default());
  break;

case 'form--login':
  render(Form.Login());
  break;

case 'hr--default':
  render(HR.Default());
  break;

case 'hr--h-r-divider':
  render(HR.HRDivider());
  break;

case 'image--default':
  render(Image.Default());
  break;

case 'image--examples':
  render(Image.Examples());
  break;

case 'image--full-width':
  render(Image.FullWidth());
  break;

case 'image--negative-pull':
  render(Image.NegativePull());
  break;

case 'image--with-caption':
  render(Image.WithCaption());
  break;

case 'input--number':
  render(Input.Number());
  break;

case 'input--password':
  render(Input.Password());
  break;

case 'input--text':
  render(Input.Text());
  break;

case 'input--usage':
  render(Input.Usage());
  break;

case 'input--with-message':
  render(Input.WithMessage());
  break;

case 'layout--blog-list':
  render(Layout.BlogList());
  break;

case 'layout--blog-post':
  render(Layout.BlogPost());
  break;

case 'layout--default':
  render(Layout.Default());
  break;

case 'layout--with-sidebar':
  render(Layout.WithSidebar());
  break;

case 'list--ordered-list':
  render(List.OrderedList());
  break;

case 'list--unordered-list':
  render(List.UnorderedList());
  break;

case 'navblock--default':
  render(NavBlock.Default());
  break;

case 'navblock--usage':
  render(NavBlock.Usage());
  break;

case 'navigation--navigation':
  render(Navigation.Navigation());
  break;

case 'navigation--navigation-space-between':
  render(Navigation.NavigationSpaceBetween());
  break;

case 'radio--pill':
  render(Radio.Default());
  break;

case 'radio--checkbox':
  render(Radio.RadioCheckbox());
  break;

case 'radio--checkbox-inline':
  render(Radio.RadioCheckboxInline());
  break;

case 'radio--pill-inline':
  render(Radio.RadioPillInline());
  break;

case 'sidebar--default':
  render(Sidebar.Default());
  break;

case 'sidebar--usage':
  render(Sidebar.Usage());
  break;

case 'sidepanel--default':
  render(SidePanel.Default());
  break;

case 'sidepanel--usage':
  render(SidePanel.Usage());
  break;

case 'table--compact':
  render(Table.Compact());
  break;

case 'table--default':
  render(Table.Default());
  break;

case 'table--with-column-divider':
  render(Table.WithColumnDivider());
  break;

case 'table--with-column-divider-compact':
  render(Table.WithColumnDividerCompact());
  break

case 'title--jumbo-usage':
  render(Title.JumboUsage());
  break;

case 'title--subtitle':
  render(Title.SubtitleExample());
  break;

case 'title--subtitle-jumbo':
  render(Title.SubtitleJumboExample());
  break;

case 'title--default':
  render(Title.TitleExample());
  break;

case 'title--jumbo':
  render(Title.TitleJumboExample());
  break;

case 'title--usage':
  render(Title.Usage());
  break;

case 'typography--heading-1':
  render(Typography.Heading1());
  break;

case 'typography--heading-2':
  render(Typography.Heading2());
  break;

case 'typography--heading-3':
  render(Typography.Heading3());
  break;

case 'typography--heading-4':
  render(Typography.Heading4());
  break;

case 'typography--heading-5':
  render(Typography.Heading5());
  break;

case 'typography--heading-6':
  render(Typography.Heading6());
  break;

case 'typography--paragraph':
  render(Typography.Paragraph());
  break;

case 'typography--usage':
  render(Typography.Usage());
  break;

case 'whitespace--auto-width':
  render(Whitespace.AutoWidth());
  break;

case 'whitespace--examples':
  render(Whitespace.Examples());
  break;

case 'whitespace--full-width':
  render(Whitespace.FullWidth());
  break;

case 'whitespace--negative-margins':
  render(Whitespace.NegativeMargins());
  break;

default:
  console.error('Unsupported argument: ', args[0]);
  process.exit(1);
  break;
}
